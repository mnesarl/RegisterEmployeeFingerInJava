/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Forms;

import Database.DBConnect;
import Helper.TKHelper;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.HashMap;
import java.util.Map;
import javax.swing.Icon;
import javax.swing.JOptionPane;
import org.json.simple.JSONObject;

/**
 *
 * @author STN-COM-01
 */
public class DBConfig extends javax.swing.JFrame {

    private DBConnect db;

    /**
     * Creates new form DBConfig
     */
    public DBConfig() {
        initComponents();
        Initialize();
    }

    private void Initialize() {
        txt_db_password.setEchoChar('‚óè');
        setDefaultCloseOperation(this.DO_NOTHING_ON_CLOSE);
        setLocationRelativeTo(null);

        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                handleClosing();
            }
        });

        // init data config
        JSONObject data = TKHelper.readJSONFile();
        JSONObject temp = (JSONObject) data.get("database");
        txt_db_host.setText(temp.get("db_host").toString());
        txt_db_name_staff.setText(temp.get("db_staff").toString());
        txt_db_name_employee.setText(temp.get("db_name").toString());
        txt_db_username.setText(temp.get("db_username").toString());
        String DES_key = data.get("DES_key").toString();
        if (!DES_key.isEmpty()) {
            String decryptedPassword = TKHelper.decryptString(temp.get("db_password").toString());
            txt_db_password.setText(decryptedPassword);
        } else {
            txt_db_password.setText("");
        }
    }

    private void handleClosing() {
        int answer = showWarningMessage();
        if (answer == 0) {
            dispose();
        }
    }

    private int showWarningMessage() {
        String[] buttonLabels = new String[]{"Yes", "No", "Cancel"};
        String defaultOption = buttonLabels[0];
        Icon icon = null;
        return JOptionPane.showOptionDialog(this, "Are you sure you want to exit?", "Warning", JOptionPane.YES_NO_CANCEL_OPTION, JOptionPane.WARNING_MESSAGE, icon, buttonLabels, defaultOption);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txt_db_host = new javax.swing.JTextField();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel2 = new javax.swing.JLabel();
        txt_db_name_staff = new javax.swing.JTextField();
        jSeparator2 = new javax.swing.JSeparator();
        jLabel3 = new javax.swing.JLabel();
        txt_db_name_employee = new javax.swing.JTextField();
        jSeparator3 = new javax.swing.JSeparator();
        jLabel4 = new javax.swing.JLabel();
        txt_db_username = new javax.swing.JTextField();
        jSeparator4 = new javax.swing.JSeparator();
        jLabel5 = new javax.swing.JLabel();
        jSeparator5 = new javax.swing.JSeparator();
        btnBack = new java.awt.Button();
        btnTestConnectionDB1 = new java.awt.Button();
        btnSaveDBConfig = new java.awt.Button();
        txt_db_password = new javax.swing.JPasswordField();
        btnTestConnectionDB2 = new java.awt.Button();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Register Employee Finger - Database Configuration");
        setBackground(new java.awt.Color(32, 33, 35));
        setResizable(false);

        jPanel1.setBackground(new java.awt.Color(32, 33, 35));

        jLabel1.setForeground(new java.awt.Color(57, 113, 177));
        jLabel1.setText("Host");
        jLabel1.setToolTipText("");

        txt_db_host.setBackground(new java.awt.Color(32, 33, 35));
        txt_db_host.setForeground(new java.awt.Color(255, 255, 255));
        txt_db_host.setBorder(null);
        txt_db_host.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_db_hostActionPerformed(evt);
            }
        });

        jLabel2.setForeground(new java.awt.Color(57, 113, 177));
        jLabel2.setText("Database 1 (Login)");
        jLabel2.setToolTipText("");

        txt_db_name_staff.setBackground(new java.awt.Color(32, 33, 35));
        txt_db_name_staff.setForeground(new java.awt.Color(255, 255, 255));
        txt_db_name_staff.setBorder(null);
        txt_db_name_staff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_db_name_staffActionPerformed(evt);
            }
        });

        jLabel3.setForeground(new java.awt.Color(57, 113, 177));
        jLabel3.setText("Database 2 (Register Finger)");
        jLabel3.setToolTipText("");

        txt_db_name_employee.setBackground(new java.awt.Color(32, 33, 35));
        txt_db_name_employee.setForeground(new java.awt.Color(255, 255, 255));
        txt_db_name_employee.setBorder(null);
        txt_db_name_employee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_db_name_employeeActionPerformed(evt);
            }
        });

        jLabel4.setForeground(new java.awt.Color(57, 113, 177));
        jLabel4.setText("Username");
        jLabel4.setToolTipText("");

        txt_db_username.setBackground(new java.awt.Color(32, 33, 35));
        txt_db_username.setForeground(new java.awt.Color(255, 255, 255));
        txt_db_username.setBorder(null);
        txt_db_username.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_db_usernameActionPerformed(evt);
            }
        });

        jLabel5.setForeground(new java.awt.Color(57, 113, 177));
        jLabel5.setText("Password");
        jLabel5.setToolTipText("");

        btnBack.setBackground(new java.awt.Color(126, 87, 194));
        btnBack.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnBack.setForeground(new java.awt.Color(255, 255, 255));
        btnBack.setLabel("Back");
        btnBack.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnBackActionPerformed(evt);
            }
        });

        btnTestConnectionDB1.setBackground(new java.awt.Color(126, 87, 194));
        btnTestConnectionDB1.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnTestConnectionDB1.setForeground(new java.awt.Color(255, 255, 255));
        btnTestConnectionDB1.setLabel("Test Connection DB 1");
        btnTestConnectionDB1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestConnectionDB1ActionPerformed(evt);
            }
        });

        btnSaveDBConfig.setBackground(new java.awt.Color(126, 87, 194));
        btnSaveDBConfig.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnSaveDBConfig.setForeground(new java.awt.Color(255, 255, 255));
        btnSaveDBConfig.setLabel("Save");
        btnSaveDBConfig.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveDBConfigActionPerformed(evt);
            }
        });

        txt_db_password.setBackground(new java.awt.Color(32, 33, 35));
        txt_db_password.setForeground(new java.awt.Color(255, 255, 255));
        txt_db_password.setBorder(null);
        txt_db_password.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txt_db_passwordActionPerformed(evt);
            }
        });

        btnTestConnectionDB2.setBackground(new java.awt.Color(126, 87, 194));
        btnTestConnectionDB2.setFont(new java.awt.Font("Century Gothic", 0, 12)); // NOI18N
        btnTestConnectionDB2.setForeground(new java.awt.Color(255, 255, 255));
        btnTestConnectionDB2.setLabel("Test Connection DB 2");
        btnTestConnectionDB2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnTestConnectionDB2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(txt_db_password, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(txt_db_host, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(txt_db_name_employee, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 93, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(txt_db_name_staff, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4)
                            .addComponent(txt_db_username, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(73, 73, 73))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, 270, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 90, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(34, 34, 34)
                .addComponent(btnSaveDBConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 89, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnTestConnectionDB1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(35, 35, 35)
                .addComponent(btnTestConnectionDB2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(101, 101, 101))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel2)
                                .addGap(4, 4, 4)
                                .addComponent(txt_db_name_staff, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jSeparator2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(4, 4, 4)
                                .addComponent(txt_db_host, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(5, 5, 5)
                                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(25, 25, 25)
                        .addComponent(jLabel3)
                        .addGap(4, 4, 4)
                        .addComponent(txt_db_name_employee, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel4)
                        .addGap(4, 4, 4)
                        .addComponent(txt_db_username, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(5, 5, 5)
                        .addComponent(jSeparator4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(27, 27, 27)
                .addComponent(jLabel5)
                .addGap(3, 3, 3)
                .addComponent(txt_db_password, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btnBack, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSaveDBConfig, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTestConnectionDB1, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnTestConnectionDB2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void txt_db_hostActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_db_hostActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_db_hostActionPerformed

    private void txt_db_name_staffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_db_name_staffActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_db_name_staffActionPerformed

    private void txt_db_name_employeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_db_name_employeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_db_name_employeeActionPerformed

    private void txt_db_usernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_db_usernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_db_usernameActionPerformed

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        SignIn signin = new SignIn();
        signin.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnTestConnectionDB1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestConnectionDB1ActionPerformed
        if (validateField()) {
            InitData();
            if (db.checkMySQLConnection(true)) {
                JOptionPane.showMessageDialog(this, "Connection Established.");
            } else {
                JOptionPane.showMessageDialog(this, "Cannot Establish Connection.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnTestConnectionDB1ActionPerformed

    private void btnSaveDBConfigActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveDBConfigActionPerformed
        if (validateField()) {
            Map<String, String> temp = new HashMap();
            temp.put("db_host", txt_db_host.getText());
            temp.put("db_staff", txt_db_name_staff.getText());
            temp.put("db_name", txt_db_name_employee.getText());
            temp.put("db_username", txt_db_username.getText());
            temp.put("db_password", txt_db_password.getText());

            // read data config JSON File
            JSONObject dataConfig = TKHelper.readJSONFile();

            // update it
            try {
                for (Map.Entry data : temp.entrySet()) {
                    JSONObject temp2 = (JSONObject) dataConfig.get("database");
                    if (data.getKey().equals("db_password")) {
                        String encryptedPassword = TKHelper.encryptString(data.getValue().toString());
                        temp2.put(data.getKey(), encryptedPassword);
                    } else {
                        temp2.put(data.getKey(), data.getValue());
                    }
                }
                dataConfig.put("DES_key", TKHelper.DES_key);
                TKHelper.updateJSONFile(dataConfig);
                TKHelper.discardDESKeyAttribute();
                JOptionPane.showMessageDialog(this, "Data Configuration has been saved.");
            } catch (Exception ex) {
                JOptionPane.showMessageDialog(this, "Something's wrong : failed to save configuration.", "Error", JOptionPane.ERROR_MESSAGE);
            }
        }
    }//GEN-LAST:event_btnSaveDBConfigActionPerformed

    private void txt_db_passwordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txt_db_passwordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txt_db_passwordActionPerformed

    private void btnTestConnectionDB2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnTestConnectionDB2ActionPerformed
        if (validateField()) {
            InitData();
            if (db.checkMySQLConnection(false)) {
                JOptionPane.showMessageDialog(this, "Connection Established.");
            } else {
                JOptionPane.showMessageDialog(this, "Cannot Establish Connection.", "Warning", JOptionPane.WARNING_MESSAGE);
            }
        }

    }//GEN-LAST:event_btnTestConnectionDB2ActionPerformed

    private void InitData() {
        String db_host = txt_db_host.getText();
        String db_staff = txt_db_name_staff.getText();
        String db_name = txt_db_name_employee.getText();
        String db_username = txt_db_username.getText();
        String db_password = txt_db_password.getText();
        db = new DBConnect(db_host, db_name, db_staff, db_username, db_password);
    }

    private boolean validateField() {
        String db_host = txt_db_host.getText();
        String db_staff = txt_db_name_staff.getText();
        String db_name = txt_db_name_employee.getText();
        String db_username = txt_db_username.getText();
        if (db_host.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Host must be filled.", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (db_staff.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Database 1 must be filled.", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (db_name.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Database 2 must be filled.", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        if (db_username.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Username must be filled.", "Warning", JOptionPane.WARNING_MESSAGE);
            return false;
        }
        return true;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DBConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DBConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DBConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DBConfig.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DBConfig().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private java.awt.Button btnBack;
    private java.awt.Button btnSaveDBConfig;
    private java.awt.Button btnTestConnectionDB1;
    private java.awt.Button btnTestConnectionDB2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JSeparator jSeparator2;
    private javax.swing.JSeparator jSeparator3;
    private javax.swing.JSeparator jSeparator4;
    private javax.swing.JSeparator jSeparator5;
    private javax.swing.JTextField txt_db_host;
    private javax.swing.JTextField txt_db_name_employee;
    private javax.swing.JTextField txt_db_name_staff;
    private javax.swing.JPasswordField txt_db_password;
    private javax.swing.JTextField txt_db_username;
    // End of variables declaration//GEN-END:variables
}
